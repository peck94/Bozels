Pieter Vander Vennet
Studentennummer 01100337
Eerste Bachelor Informatica 

Toelichting programmeerproject BOZELS
-------------------------------------

Het project is gemaakt in Eclipse (wegens religieuze overtuiging ;) ).
Het programma is gecompileerd en getest op Java 7.

De klassenstructuur is als volgt onderverdeeld:

Het package physicsModel is een soort wrapper-model voor JBox2d.
	Dit is om het werken met JBox2d te vereenvoudigen.
	Dit package bevat ook alle concrete materialen, van de verschillende types.
	Het volgt de structuur van Box2d (bv: materialen, vormen, en ontploffingen...)

Het levelModel is hierop verder gebouwd, en bevat het eigenlijke level,
	met specifieke functionaliteit: breken, bozels laden, ...
	Hier vindt u ook de gameobjects

Visualitatie bevat alles voor het concrete tekenen van het level.
	Deze bevat het gameColorModel (dat de kleuren van de meterialen bepaald),
	en een paintersettingsmodel, dat tekeninstellingen bepaald (bv: achtergrondkleur/afbeelding)
	Daarnaast bevat het het systeem op met doublebuffering te tekenen.
	Zie visualisatie/RenderingPrincipe.txt voor het tekenmechanisme

gui bevat de echte grafische interface, en tekent het venster, de menubar, ...

ResourceTracker (model pack.) is erg belangerijk: deze is het model onder de GUI (bv taal en kleuren)
	ResourceTracker bevat ook (een referentie) naar het model en kleurenmodel (viewsettings)
		 en stelt de views op de hoogte als deze modellen andere modellen worden.
	Componenten die een tracker-object nodig hebben, zullen er een via de constructor krijgen.
	ALLE externe resources worden via de tracker opgehaald: stringwaarden, kleuren, afbeeldingen, ...
	Constante strings kunnen worden opgevraagd in de klasse Constants.
	Deze klasse verzamelt alle constanten, om "magic numbering" te voorkomen.
	(Bv: tien keer de knop "save". Deze is opgeslaan in de locale als "save".
	 Als ergens "Save" wordt getypt, geeft dit problemen, daarom kan dit als stringconst. opgehaald worden.
	
resources bevatten alle externe resources, zoals afbeeldingen

xml is -logischerwijze- het luik dat de levels inlaadt.
	Met levelBuilder kan een level rechtstreeks gebouwd worden, 
	of er kan een "levelDefinition" gemaakt worden. Dit bevat een alle object die mogelijk
	aan het level moet worden toegevoed, en kan gebruikt worden om het level te herstarten, 
	zonder dat het bestand opnieuw ingelezen moet worden.
	
bozels.superModel.SuperModel is een overkoepelende klasse die een referentie 
	naar andere modellen en centrale klassen bijhoudt: de resourceTracker,
	een level en levelDefinitie, een GUIColorModel, een GameColorModel, ...
	Hoewel er de mogelijkheid is om modellen at runtime te wisselen, is dit een slecht idee, 
	en zal niet overal gewerkt worden met het nieuw model.
	Als het level of de leveldefition veranderd, wordt dit wel altijd aangepast.
	
	Zie project2.txt voor de bottom-up opbouw van de modellen.
